<?php 

global $api_key;
$api_key = 'UJpSrvX3';

/**
 * Implements hook_block_info.
 */
 function rescue_api_block_info() {
 	$blocks = array();

 	// The array key is known as the block "delta" (a unique identifier // within your module), and is used in other block hooks. Choose // something descriptive.
  	$blocks['rescue_adopt_dogs'] = array(
  		// The name shown on the Blocks administration page. // Be descriptive and unique across all blocks.
      'info' => t('Adoptable Dogs'),
      'cache' => DRUPAL_NO_CACHE,
    );
    
    $blocks['rescue_adopt_events'] = array(
    	'info' => t('Adoption Events'),
    	'cache' => DRUPAL_NO_CACHE,
    );

    $blocks['rescue_adopt_events_home'] = array(
    	'info' => t('Adoption Events Home'),
    	'cache' => DRUPAL_NO_CACHE,
    );
    /** other blocks can be added here **/
    
    return $blocks;
 }


 /**
 * Implements hook_block_view.
 */

 // Generate the block content. Note that the $delta value passed in // is the same as the array key you returned in your hook_block_info() // implementation

 function rescue_api_block_view ($delta = '') {
  	$block = array();   
	
	switch ($delta) {
      	case 'rescue_adopt_dogs': 
	        $block['subject'] = t('Dogs Looking for Home');
	        $block['content'] = block_rescue_content($delta); 
	        break; 

     	case 'rescue_adopt_events': 
	        $block['subject'] = t('Meet the Dogs');
	        $block['content'] = block_rescue_content($delta); 
	        break; 

 		case 'rescue_adopt_events_home': 
	        $block['subject'] = t('Events');
	        $block['content'] = block_rescue_content($delta); 
	        break; 

    }

   	return $block;
 }

/**
* A module-defined block content function.
*/

function block_rescue_content($delta) {
	global $api_key;

  	$items = array();

	module_load_include('php','rescue_api','curl_json');  // TO DO try using:  drupal_http_request 

	switch($delta) {
		
		case 'rescue_adopt_dogs':
			$api_query = prepare_animal_query($api_key,6);
			$datajson = curl_json($api_query);
		    $header = array('Animal ID', 'Animal Name', 'Thumb');
		    $items = array();
		    foreach ($datajson as $row) {
				$items[] = array(
					'animal_id' => $row['animalID'],
					'animal_name' => $row['animalName'],
					'animal_thumbnail_url' => $row['animalThumbnailUrl'],
				);
			}
 			//dpm($items); working
	        //return theme('table', array('header' => $header, 'rows' => $items));
			return theme('rescue_api_animal_function',array('items' => $items));
			break;



		case 'rescue_adopt_events':
			$api_query = prepare_event_query($api_key,3);
			$datajson = curl_json($api_query);
			
			// same like rows for table
			$items = array(); 
			//iterate over the results of API query

			foreach ($datajson as $row) {
				$items[] = array(
					'event_id' => $row['eventID'],
					'event_name' => $row['eventName'],
					'event_start' => date('M j, Y',strtotime($row['eventStart'])),
				);
			}
			// call theme function define in rescue_api_theme below
			return theme('rescue_api_events_function', array('items'=> $items));
			break;

		case 'rescue_adopt_events_home':
			$api_query = prepare_event_query($api_key,3);
			$datajson = curl_json($api_query);
			
			// same like rows for table
			$items = array(); 
			//iterate over the results of API query

			foreach ($datajson as $row) {
				$items[] = array(
					'event_id' => $row['eventID'],
					'event_name' => $row['eventName'],
					'event_start' => date('M j, Y',strtotime($row['eventStart'])),
				);
			}
			// call theme function define in rescue_api_theme below
			return theme('rescue_api_events_function', array('items'=> $items));
			break;
	}
} 
 

 /**
 * Implements hook_theme().
 */
function rescue_api_theme($existing, $type, $theme, $path) {
  return array(
    'rescue_api_events_function' => array(
      'variables' => array('event_id' => NULL , 'event_name' => NULL,'event_start' => NULL),
    ),
   	'rescue_api_animal_function' => array(
      'variables' => array('animal_id' => NULL , 'animal_name' => NULL,'animal_thumbnail_url' => NULL),
    ),
  );
}


/**
* Theme function rescue_api_events_function 
*/
function theme_rescue_api_events_function ($variables) {
	$events = $variables['items'];
	$output = '<div class="events">';
	$output .= '<ul>';
	foreach ($events as $event) {
		$mydatevar = strtotime($event['event_start']);
		$day = date('j',$mydatevar);
		$month = date('M',$mydatevar);
		$output .= '<li><div class="date"><span>'. $day .'</span><br>'. $month .'</div><div class="details"><h5><a href="event">' . $event['event_name'] . '</a></h5></div></li>';
	}
	$output .= '</ul>';
	$output .= '</div>';
	return $output;
}



/**
* Theme function rescue_api_animal_function 
*/
function theme_rescue_api_animal_function ($variables) {
	$animals = $variables['items'];
	$output = '<div class="gallery">';
	$output .= '<ul>';
	foreach ($animals as $animal) {
		$output .= '<li><a href="'. $animal['animal_id'] .'"><img src="' . $animal['animal_thumbnail_url'] . '"></a></li>';
	}
	$output .= '</ul>';
	$output .= '</div>';
	return $output;
}

/**
* Prepares data array for specific rescue groups API query ( Events )
*/
function prepare_event_query($key,$limit) {
	$today = date("m/d/Y");
	$data = array(
	    "apikey" => $key,
	    "objectType" => "events",
	    "objectAction" => "publicSearch",
	    "search" => array (
	        "resultStart" => 0,
	        "resultLimit" => $limit,
	        "resultSort" => "eventStart",
	        "resultOrder" => "asc",
	        "calcFoundRows" => "Yes",
			"filters" => array(
			      array(
			        "fieldName" => "eventSpecies",
			        "operation" => "equals",
			        "criteria" => "dog",
			      ),
				 array(
			        "fieldName" => "eventStart",
			        "operation" => "greaterthanorequal",
			        "criteria" => $today,
			      ),
			 ),
	        "fields" => array("eventID","eventName","eventStart"),
	    ),
	);
	
	return $data;
}

/**
* Prepares data array for specific rescue groups API query ( Animals )
*/

function prepare_animal_query($key,$limit) {
	$today = date("m/d/Y");
	$data = array(
	    "apikey" => $key,
	    "objectType" => "animals",
	    "objectAction" => "publicSearch",
	    "search" => array (
	        "resultStart" => 0,
	        "resultLimit" => $limit,
	        "resultSort" => "animalID",
	        "resultOrder" => "asc",
	        "calcFoundRows" => "Yes",
			"filters" => array(
			      array(
			        "fieldName" => "animalStatus",
			        "operation" => "equals",
			        "criteria" => "Available",
			      ),
				 array(
			        "fieldName" => "animalSpecies",
			        "operation" => "equal",
			        "criteria" => "Dog",
			      ),
			 ),
	         "fields" => array("animalId","animalName","animalThumbnailUrl"),
	    ),
	);
	
	return $data;
}


	// drupal theme "table" outout example 
	//$header = array('Event ID', 'Event Name', 'Date');
	//return theme('table', array('header' => $header, 'rows' => $items));


	//echo '<pre>'; print_r($items); echo '</pre>';
